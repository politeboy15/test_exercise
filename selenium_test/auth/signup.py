import pytest
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from utils.csv_reader import CSVReader
import time


class TestSignup:
    """–¢–µ—Å—Ç—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    def test_signup_page_loads(self, driver, base_url):
        """–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        driver.get(f"{base_url}/signup/")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        assert "Sign Up" in driver.title
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        form = driver.find_element(By.TAG_NAME, "form")
        assert form.is_displayed()
        
    def test_signup_form_elements(self, driver, base_url):
        """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        driver.get(f"{base_url}/signup/")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
        first_name_field = driver.find_element(By.NAME, "first_name")
        last_name_field = driver.find_element(By.NAME, "last_name")
        email_field = driver.find_element(By.NAME, "email")
        password_field = driver.find_element(By.NAME, "password")
        confirm_password_field = driver.find_element(By.NAME, "confirm_password")
        date_of_birth_field = driver.find_element(By.NAME, "date_of_birth")
        
        first_name_field.send_keys(test_user_data["first_name"])
        last_name_field.send_keys(test_user_data["last_name"])
        email_field.send_keys("invalid-email-format")
        password_field.send_keys(test_user_data["password"])
        confirm_password_field.send_keys(test_user_data["password"])
        date_of_birth_field.send_keys(test_user_data["date_of_birth"])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        submit_button.click()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        assert "/signup/" in driver.current_url
        
    def test_signup_with_invalid_date_format(self, driver, base_url, test_user_data):
        """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã"""
        driver.get(f"{base_url}/signup/")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç—ã
        first_name_field = driver.find_element(By.NAME, "first_name")
        last_name_field = driver.find_element(By.NAME, "last_name")
        email_field = driver.find_element(By.NAME, "email")
        password_field = driver.find_element(By.NAME, "password")
        confirm_password_field = driver.find_element(By.NAME, "confirm_password")
        date_of_birth_field = driver.find_element(By.NAME, "date_of_birth")
        
        first_name_field.send_keys(test_user_data["first_name"])
        last_name_field.send_keys(test_user_data["last_name"])
        email_field.send_keys(f"test_{int(time.time())}@example.com")
        password_field.send_keys(test_user_data["password"])
        confirm_password_field.send_keys(test_user_data["password"])
        date_of_birth_field.send_keys("invalid-date")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        submit_button.click()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        assert "/signup/" in driver.current_url
        
    def test_signup_with_duplicate_email(self, driver, base_url):
        """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º email"""
        driver.get(f"{base_url}/signup/")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ CSV
        existing_user = CSVReader.read_test_users()[0]
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º email
        first_name_field = driver.find_element(By.NAME, "first_name")
        last_name_field = driver.find_element(By.NAME, "last_name")
        email_field = driver.find_element(By.NAME, "email")
        password_field = driver.find_element(By.NAME, "password")
        confirm_password_field = driver.find_element(By.NAME, "confirm_password")
        date_of_birth_field = driver.find_element(By.NAME, "date_of_birth")
        
        first_name_field.send_keys("New")
        last_name_field.send_keys("User")
        email_field.send_keys(existing_user["email"])
        password_field.send_keys("newpassword123")
        confirm_password_field.send_keys("newpassword123")
        date_of_birth_field.send_keys("1990-01-01")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        submit_button.click()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –ø–æ–∫–∞–∑–∞–ª–∏ –æ—à–∏–±–∫—É
        WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.TAG_NAME, "form"))
        )
        
        assert "/signup/" in driver.current_url
        
    @pytest.mark.parametrize("invalid_date", [
        "32-12-2000",  # –ù–µ–≤–µ—Ä–Ω—ã–π –¥–µ–Ω—å
        "01-13-2000",  # –ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Å—è—Ü
        "2000-13-01",  # –ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Å—è—Ü –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        "2000-02-30",  # –ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è —Ñ–µ–≤—Ä–∞–ª—è
        "abc-def-ghij",  # –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    ])
    def test_signup_with_various_invalid_dates(self, driver, base_url, test_user_data, invalid_date):
        """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏"""
        driver.get(f"{base_url}/signup/")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å –Ω–µ–≤–µ—Ä–Ω–æ–π –¥–∞—Ç–æ–π
        first_name_field = driver.find_element(By.NAME, "first_name")
        last_name_field = driver.find_element(By.NAME, "last_name")
        email_field = driver.find_element(By.NAME, "email")
        password_field = driver.find_element(By.NAME, "password")
        confirm_password_field = driver.find_element(By.NAME, "confirm_password")
        date_of_birth_field = driver.find_element(By.NAME, "date_of_birth")
        
        first_name_field.send_keys(test_user_data["first_name"])
        last_name_field.send_keys(test_user_data["last_name"])
        email_field.send_keys(f"test_{int(time.time())}@example.com")
        password_field.send_keys(test_user_data["password"])
        confirm_password_field.send_keys(test_user_data["password"])
        date_of_birth_field.send_keys(invalid_date)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        submit_button.click()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        assert "/signup/" in driver.current_url
        date_of_birth_field = driver.find_element(By.NAME, "date_of_birth")
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        
        assert first_name_field.is_displayed()
        assert last_name_field.is_displayed()
        assert email_field.is_displayed()
        assert password_field.is_displayed()
        assert confirm_password_field.is_displayed()
        assert date_of_birth_field.is_displayed()
        assert submit_button.is_displayed()
        assert submit_button.text == "Sign Up"
        
    def test_signup_form_labels(self, driver, base_url):
        """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è –ø–æ–¥–ø–∏—Å–µ–π –∫ –ø–æ–ª—è–º —Ñ–æ—Ä–º—ã"""
        driver.get(f"{base_url}/signup/")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–µ–π
        page_text = driver.page_source
        
        assert "Your first name:" in page_text
        assert "Your last name:" in page_text
        assert "Your email:" in page_text
        assert "Your password:" in page_text
        assert "Confirm password:" in page_text
        assert "Your date of birth[YYYY-MM-DD]:" in page_text
        
    def test_home_button_exists(self, driver, base_url):
        """–¢–µ—Å—Ç –Ω–∞–ª–∏—á–∏—è –∫–Ω–æ–ø–∫–∏ –¥–æ–º–æ–π"""
        driver.get(f"{base_url}/signup/")
        
        home_link = driver.find_element(By.LINK_TEXT, "üè† –î–æ–º–æ–π")
        assert home_link.is_displayed()
        assert home_link.get_attribute("href") == f"{base_url}/"
        
    def test_successful_signup(self, driver, base_url, test_user_data):
        """–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        driver.get(f"{base_url}/signup/")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        first_name_field = driver.find_element(By.NAME, "first_name")
        last_name_field = driver.find_element(By.NAME, "last_name")
        email_field = driver.find_element(By.NAME, "email")
        password_field = driver.find_element(By.NAME, "password")
        confirm_password_field = driver.find_element(By.NAME, "confirm_password")
        date_of_birth_field = driver.find_element(By.NAME, "date_of_birth")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π email –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        unique_email = f"test_{int(time.time())}@example.com"
        
        first_name_field.send_keys(test_user_data["first_name"])
        last_name_field.send_keys(test_user_data["last_name"])
        email_field.send_keys(unique_email)
        password_field.send_keys(test_user_data["password"])
        confirm_password_field.send_keys(test_user_data["password"])
        date_of_birth_field.send_keys(test_user_data["date_of_birth"])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        submit_button.click()
        
        # –û–∂–∏–¥–∞–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        WebDriverWait(driver, 10).until(
            EC.url_contains(base_url)
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (–ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞)
        assert driver.current_url in [f"{base_url}/", f"{base_url}/signin/"]
        
    def test_signup_with_mismatched_passwords(self, driver, base_url, test_user_data):
        """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –Ω–µ—Å–æ–≤–ø–∞–¥–∞—é—â–∏–º–∏ –ø–∞—Ä–æ–ª—è–º–∏"""
        driver.get(f"{base_url}/signup/")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏
        first_name_field = driver.find_element(By.NAME, "first_name")
        last_name_field = driver.find_element(By.NAME, "last_name")
        email_field = driver.find_element(By.NAME, "email")
        password_field = driver.find_element(By.NAME, "password")
        confirm_password_field = driver.find_element(By.NAME, "confirm_password")
        date_of_birth_field = driver.find_element(By.NAME, "date_of_birth")
        
        first_name_field.send_keys(test_user_data["first_name"])
        last_name_field.send_keys(test_user_data["last_name"])
        email_field.send_keys(f"test_{int(time.time())}@example.com")
        password_field.send_keys(test_user_data["password"])
        confirm_password_field.send_keys("different_password")
        date_of_birth_field.send_keys(test_user_data["date_of_birth"])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        submit_button.click()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.TAG_NAME, "form"))
        )
        
        assert "/signup/" in driver.current_url
        
    def test_signup_with_empty_fields(self, driver, base_url):
        """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏"""
        driver.get(f"{base_url}/signup/")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –±–µ–∑ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π
        submit_button = driver.find_element(By.CSS_SELECTOR, "button[type='submit']")
        submit_button.click()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        assert "/signup/" in driver.current_url
        
    def test_signup_with_invalid_email(self, driver, base_url, test_user_data):
        """–¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º email"""
        driver.get(f"{base_url}/signup/")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å –Ω–µ–≤–µ—Ä–Ω—ã–º email
        first_name_field = driver.find_element(By.NAME, "first_name")
        last_name_field = driver.find_element(By.NAME, "last_name")
        email_field = driver.find_element(By.NAME, "email")
        password_field = driver.find_element(By.NAME, "password")
        confirm_password_field = driver.find_element(By.NAME, "confirm_password")